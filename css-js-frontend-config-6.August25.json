{"CfourCustomCssJs":{"css.Activate":"true","css.AddCustomCss":"/* Start Custom Schriftarten + Preis Text Stylings */\n\n@import url(\"https://use.typekit.net/lwl7tyw.css\");\n\n.price.h1 {\n  font-family: \"industry\", sans-serif;\n  font-weight: 600;\n  font-size: 3rem;\n  color: #f20000;\n}\n\n/* Ende Custom Schriftarten + Preis Text Stylings */\n\n/* Start Artikel Preview Card Preis Styling */\n.price {\ncolor: #f20000 !important;\nfont-size: 1.4rem;\nfont-family: industry, helvetica, arial, sans-serif;\n}\n/* Ende Artikel Preview Card Preis Styling */\n\n/* Start Trustbadge ausblenden */\n.basket-open .widget_container_overlay,\n.basket-open #trustami-mobile-view,\n.basket-open .back-to-top,\n.basket-open .widget-cookie-bar,\n.basket-open div[id^=\"trustbadge-container-\"],\n.basket-open #web-chat-loader-root,\n#kyjMegaMenuNavContainer.kyj-mega-menu-dropdown-is-active .widget_container_overlay,\n#kyjMegaMenuNavContainer.kyj-mega-menu-dropdown-is-active #trustami-mobile-view,\n#kyjMegaMenuNavContainer.kyj-mega-menu-dropdown-is-active .back-to-top,\n#kyjMegaMenuNavContainer.kyj-mega-menu-dropdown-is-active .widget-cookie-bar,\n#kyjMegaMenuNavContainer.kyj-mega-menu-dropdown-is-active div[id^=\"trustbadge-container-\"],\n#kyjMegaMenuNavContainer.kyj-mega-menu-dropdown-is-active #web-chat-loader-root {\n    display: none !important;\n}\n/* Ende Trustbadge ausblenden */\n\n/* Start Allgemeines Button-Styling für .btn-primary */\n.btn.btn-primary {\n  background-color: #000000 !important;     /* Tiefschwarz – kräftig */\n  color: #ffffff !important;                /* Weißer Text */\n  font-family: \"industry\", sans-serif;\n  font-weight: 600;\n  font-size: 0.9rem;\n  padding: 0.6em 1.2em;\n  border: 2px solid #f20000;   /* SCHRAUBEN-HAMMER blau als Kontrast */\n  border-radius: 6px;                \n  box-shadow: 0 4px 0 #f20000;              /* \"Solider\" Shadow-Effekt */\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: 5px;\n  transition: all 0.2s ease-in-out;\n}\n\n/* Hover-Effekt für besseren Button-Charakter */\n.btn.btn-primary:hover {\n  background-color: #f20000 !important;\n  color: #000000 !important;\n  box-shadow: 0 4px 0 #000000;\n  transform: translateY(-1px);\n}\n\n/* Ende Allgemeines Button-Styling für .btn-primary */\n\n/* Start Body Top Margin Fix */\ndiv.widget.widget-grid.widget-two-col.row.mt-5 {\nmargin-top: 1rem !important;\n}\n/* Ende Body Top Margin Fix */\n\n\n\n/* Start Mobil Burger Menu Fix */\n@media (max-width: 890px) {\n  .kjv-big-resolution-only .kjv-mega-menu {\n    display: block !important;\n    visibility: hidden !important;\n    margin-left: -90px;\n  }\n}\n/* Ende Mobil Burger Menu Fix */\n\n/* Start Logo + Seachbar Sizing Optimization */\n\n/* Containing element */\n.kjv-navbar-brand-and-search {\nheight: auto !important;\n}\n\n/* Logo element */\n.kjv-shop-logo {\nwidth: auto !important;\nheight: 80px !important;\nmargin: -20px 0 10px !important;\n}\n\n/* Start Logo + Seachbar Sizing Optimization */\n\n/* Containing element */\n.kjv-navbar-brand-and-search {\nheight: auto !important;\n}\n\n/* Logo element */\n.kjv-shop-logo {\nwidth: auto !important;\nheight: 75px !important;\nmargin: -20px 0 10px;\n}\n\n/* Search element */\n.kjv-navbar-search {\nmargin: 5px 0  10px !important;\n}\n\n@media (max-width: 890px) {\n  .kjv-shop-logo {\n    margin-top: 5px !important;\n  }\n}\n\n/* Ende Logo + Seachbar Sizing Optimization */\n\n.kjv-search-container{\n  display: flex;\n  width: 96%;\n  /* flex-direction: row; /* This is the default for flex, but good to be explicit */\n}\n\n.kjv-search-element {\n  flex-grow: 1; /* Allows this element to grow to fill available space */\n  width: auto; /* Or you might need to unset a previous fixed width */\n  order: 2; /* Sets the visual order */\n}\n\n.kjv-mega-menu-mob {\n  order: 1; /* Sets the visual order, placing it before the other element */\n  /* flex-shrink: 1; /* This was its default, keep if needed */\n}\n\n/* Start Fix Button Suchicon*/\n.search-submit.px-3 {\n  width: 50px !important;\n}\n/* Ende Mini Fix Button Suchicon*/\n\n/*Start Mobile Full Width Navbar */\n@media (max-width: 890px) {\n    .kjv-search-container {\n        width: 100% !important;\n    }\n}\n/*Ende Mobile Full Width Navbar*/\n\n/* --- Anfang Fast Checkout CSS Anpassungen --- */\n\n#page-body > div > div > div > div > div:nth-child(1) > div > div > div > div.fc-container_header > div > a > picture > img  {\n   min-height: 70px;\n}\n#page-body > div > div > div > div > div:nth-child(1) > div > div > div > div.fc-container_header > div {\n   padding-bottom: 1.1rem !important;\n   padding-top: 1.1rem !important;\n}\n.after-invoice-address {\n   display: none;\n}\n\n#page-body > div > div > div > div > div:nth-child(1) > div > div > div > div.fc-container_right > div > div.widget.widget-sticky.mb-2.sticky-element > div > div.mt-2.mb-4 > div > div > span > button {\n   box-shadow: none;\n}\n#page-body > div > div > div > div > div:nth-child(1) > div > div > div > div.fc-container_bottom > div > div.checkout-validation-wrapper > div:nth-child(2) > div > div > div > button {\n    height: 50px;\n    font-size: medium;\n}\n#addressMultiSelect96 {\n    border-radius: 12px;\n    min-height: auto;\n}\n#addressMultiSelect88 {\n    border-radius: 12px;\n}\n\n#addressMultiSelect88 > div > div > p {\n    padding-top: 0.6rem !important;\n    padding-bottom: 0.6rem !important;\n}\n#basketListContainer50 {\n    padding-top: 10px;\n}\n#basketListContainer50 > div > div > div > div.meta-container-wrapper > div > div.basket-item-container-right > div.qty-box-container > div > div > button:nth-child(1) {\n    border-top-right-radius: 5px !important;\n}\n#basketListContainer50 > div > div > div > div.meta-container-wrapper > div > div.basket-item-container-right > div.qty-box-container > div > div > button.btn.qty-btn.flex-fill.d-flex.justify-content-center.p-0.disabled {\n    border-bottom-right-radius: 5px !important;\n}\n#page-body > div > div > div > div > div:nth-child(1) > div > div > div > div.fc-container_left > div > div.shipping-method-select > div > fieldset > ul > li > label > div.icon > img  {\n    width: 100%;\n}\n/* --- Ende Fast Checkout CSS Anpassungen --- */\n\n\n/* --- Anfang Warenkorb->Weiter einkaufen Button Styling ---*/\n\n/* Button Grunddesign */\n.basket-preview-footer .btn-outline-primary.btn-block {\n    border: 2px solid #de2c2f !important;   /* Rot aus deinem Shop (#de2c2f) */\n    color: #de2c2f !important;\n    background: #fff !important;\n    border-radius: 6px !important;\n    padding: 0.6em 1.6em !important;\n    font-weight: 600 !important;\n    font-size: 0.9em;\n    font-family: 'industry';\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n    box-shadow: none !important;\n    transition: background 0.15s, color 0.15s, border-color 0.15s;\n}\n\n/* Icon anpassen */\n.basket-preview-footer .btn-outline-primary.btn-block i.fa-arrow-left {\n    font-size: 1.2em;\n    margin-right: 0.5em;\n    margin-left: -0.2em;\n}\n\n/* Hover-Effekt */\n.basket-preview-footer .btn-outline-primary.btn-block:hover,\n.basket-preview-footer .btn-outline-primary.btn-block:focus {\n    background: #de2c2f !important;\n    color: #fff !important;\n    border-color: #de2c2f !important;\n    text-decoration: none;\n}\n\n/* Optional: Fokus-Outline */\n.basket-preview-footer .btn-outline-primary.btn-block:focus-visible {\n    outline: 2px solid #222;\n    outline-offset: 2px;\n}\n\n/* --- Ende Warenkorb->Weiter einkaufen Button Styling ---*/","headjs.Activate":"true","headjs.AddCustomLibs":"<script src=\"https://integrations.etrusted.com/applications/widget.js/v2\" defer async></script>\n<script src=\"https://eu1-config.doofinder.com/2.x/c03cd13f-9487-472a-8772-dcbf21f72fa7.js\" async></script>","headjs.AddCustomJs":"","js.Activate":"true","js.AddCustomLibs":"","js.AddCustomJs":"// ====================\n// JS für ALLE Seiten\n// ====================\n\n// --- BEGINN: Bestell-Versand Countdown Code ---\n(function(){\n  function getBerlinTime() {\n    const now = new Date();\n    const berlinParts = new Intl.DateTimeFormat('de-DE', {\n      timeZone: 'Europe/Berlin',\n      year: 'numeric', month: '2-digit', day: '2-digit',\n      hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false\n    }).formatToParts(now);\n    const dateObj = {};\n    berlinParts.forEach(({type, value}) => { dateObj[type] = value; });\n    return new Date(`${dateObj.year}-${dateObj.month}-${dateObj.day}T${dateObj.hour}:${dateObj.minute}:${dateObj.second}`);\n  }\n  function isWorkday(date) {\n    var day = date.getDay();\n    return day >= 1 && day <= 5;\n  }\n  function getNextWorkday(date) {\n    var next = new Date(date);\n    do {\n      next.setDate(next.getDate() + 1);\n    } while (!isWorkday(next));\n    return next;\n  }\n  function pad2(n){ return n < 10 ? '0'+n : n; }\n  function pluralize(n, singular, plural) {\n    return (n === 1) ? singular : plural;\n  }\n  function formatTime(h, m, s, showSeconds, color) {\n    let t = '<span style=\"font-weight:bold;color:' + color + ';\">';\n    if(h > 0) {\n      t += h + ' ' + pluralize(h, 'Stunde', 'Stunden') + ' ';\n    }\n    t += m + ' ' + pluralize(m, 'Minute', 'Minuten');\n    if(showSeconds) t += ' ' + s + ' ' + pluralize(s, 'Sekunde', 'Sekunden');\n    return t + '</span>';\n  }\n  var iconUrl = \"https://cdn02.plentymarkets.com/nteqnk1xxnkn/frontend/shipping_9288277.svg\";\n  var iconHtml = '<img src=\"' + iconUrl + '\" alt=\"\" style=\"height:2.6em;width:auto;vertical-align:middle;display:block;\">';\n  function waitForCountdownDiv(){\n    var elem = document.getElementById('cutoff-countdown');\n    if (!elem) return setTimeout(waitForCountdownDiv, 300);\n    elem.style.display = \"flex\";\n    elem.style.alignItems = \"flex-start\";\n    elem.style.gap = \"0.85em\";\n    elem.style.color = \"rgb(108, 117, 125)\";\n    elem.style.setProperty('color', 'rgb(108, 117, 125)', 'important');\n    var now = getBerlinTime();\n    var day = now.getDay();\n    var hour = now.getHours();\n    var cutoff = new Date(now);\n    cutoff.setHours(13, 0, 0, 0);\n    var ms, h, m, s, color, targetDay, isTomorrow, dateLabel, showSeconds, zeitHtml;\n    function getColor(hours){\n      if (hours < 1) return \"#dc2626\";\n      if (hours < 3) return \"#eab308\";\n      return \"#13a10e\";\n    }\n    if (isWorkday(now) && hour >= 1 && hour < 13) {\n      ms = cutoff - now;\n      h = Math.floor(ms / (1000 * 60 * 60));\n      m = Math.floor((ms / (1000 * 60)) % 60);\n      s = Math.floor((ms / 1000) % 60);\n      showSeconds = (h === 0);\n      color = getColor(h);\n      zeitHtml = formatTime(h, m, s, showSeconds, color);\n      dateLabel = \"heute\";\n    } else {\n      var weekdays = [ \"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\" ];\n      var nextWorkday = getNextWorkday(now);\n      var nextCutoff = new Date(nextWorkday);\n      nextCutoff.setHours(13, 0, 0, 0);\n      ms = nextCutoff - now;\n      h = Math.floor(ms / (1000 * 60 * 60));\n      m = Math.floor((ms / (1000 * 60)) % 60);\n      s = Math.floor((ms / 1000) % 60);\n      showSeconds = (h === 0);\n      color = getColor(h);\n      zeitHtml = formatTime(h, m, s, showSeconds, color);\n      var tomorrow = new Date(now); tomorrow.setDate(now.getDate()+1);\n      var isTomorrow = tomorrow.toDateString() === nextWorkday.toDateString();\n      var dayName = weekdays[nextWorkday.getDay()];\n      var dayNum = pad2(nextWorkday.getDate());\n      var monthNum = pad2(nextWorkday.getMonth()+1);\n      var datum = dayNum + '.' + monthNum;\n      if (day === 5 && hour >= 13) {\n        dateLabel = \"nächsten Montag, den \" + datum;\n      } else if (day === 6) {\n        dateLabel = \"nächsten Montag, den \" + datum;\n      } else if (day === 0) {\n        dateLabel = \"Morgen, Montag den \" + datum;\n      } else if (isTomorrow) {\n        dateLabel = \"Morgen, \" + dayName + \" den \" + datum;\n      } else {\n        dateLabel = dayName + \" den \" + datum;\n      }\n    }\n    var textHtml = '<div style=\"display:flex;flex-direction:column;justify-content:center;line-height:1.45;\">' +\n     '<span style=\"font-weight:600;\">Bestellen Sie innerhalb ' + zeitHtml + ', damit Ihre Ware ' + dateLabel + ' unser Lager verlässt.   </span>' +\n  '</div>';\n    elem.innerHTML = \n      '<div style=\"display:flex;align-items:center;\">' +\n        iconHtml +\n      '</div>' +\n      textHtml;\n  }\n  waitForCountdownDiv();\n  setInterval(waitForCountdownDiv, 1000);\n})();\n// --- ENDE: Bestell-Versand Countdown Code ---\n\n// --- BEGINN: Versand Icons ändern & einfügen (läuft auf ALLEN Seiten inkl. Checkout) ---\ndocument.addEventListener('DOMContentLoaded', function () {\n  const shippingIcons = {\n    'ShippingProfileID1331': 'https://cdn02.plentymarkets.com/nteqnk1xxnkn/frontend/DHLVersand_Icon_D1.png',\n    'ShippingProfileID1345': 'https://cdn02.plentymarkets.com/nteqnk1xxnkn/frontend/GO_Express_Versand_Icon_D1.1.png',\n    'ShippingProfileID1310': 'https://cdn02.plentymarkets.com/nteqnk1xxnkn/frontend/Selbstabholung_Lager_Versand_Icon_D1.1.png'\n  };\n\n  Object.entries(shippingIcons).forEach(([profileId, iconUrl]) => {\n    const label = document.querySelector(`label[for=\"${profileId}\"]`);\n    if (label) {\n      const iconContainer = label.querySelector('.icon');\n\n      if (iconContainer) {\n        // Bestehendes leeren\n        iconContainer.innerHTML = '';\n\n        // Neues Icon einfügen\n        const img = document.createElement('img');\n        img.src = iconUrl;\n        img.alt = 'Versandart Icon';\n        img.className = 'shipping-icon';\n        iconContainer.appendChild(img);\n      }\n    }\n  });\n});\n// --- ENDE: Versand Icons ändern & einfügen ---\n\n// ===============================\n// RESTLICHER JS-Code (ausgeblendet auf Checkout/Kaufabwicklung/Kasse)\n// ===============================\n\n(function() {\n  var path = window.location.pathname;\n  // Bei folgenden Pfaden abbrechen:\n  if (path.includes(\"/checkout\") || path.includes(\"/kaufabwicklung\") || path.includes(\"/kasse\")) {\n    return;\n  }\n\n  // -- Anfang des restlichen Codes --\n  \n// --- Anfang Animierte Suchplatzhalter Vorschläge ---\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const searchInput = document.querySelector('input.search-input');\n  if (!searchInput) return;\n\n  let inputFocused = false;\n\n  // CSS-based device detection\n  function getDeviceType() {\n    return getComputedStyle(document.body, '::after').content.replace(/\"/g, '');\n  }\n\n  function getPrefix() {\n    return getDeviceType() === \"mobile\" ? \"Suche: \" : \"Häufig gesucht: \";\n  }\n\n  let prefix = getPrefix();\n\n  const allWords = [\n    \"\\\"Bolzenanker\\\"\",\n    \"\\\"Terrassenschrauben\\\"\",\n    \"\\\"Holzschutzband\\\"\",\n    \"\\\"Solar Befestigung\\\"\",\n    \"\\\"Edelstahl Ketten\\\"\",\n    \"\\\"Schrauben mit ETA\\\"\",\n    \"\\\"Winkel\\\"\",\n    \"\\\"Edelstahl Bits\\\"\",\n    \"\\\"Terrassenschrauben\\\"\",\n    \"\\\"Holzschutzband\\\"\",\n    \"\\\"Fassadenschrauben\\\"\",\n    \"\\\"Nägel\\\"\",\n    \"\\\"Universalbohrer\\\"\",\n    \"\\\"Wera Werkzeug\\\"\",\n    \"\\\"Tellerkopfschrauben\\\"\",\n    \"\\\"Justierschraube\\\"\"\n   ];\n\n  let currentSet = [];\n  let currentWord = 0;\n  let currentChar = 0;\n  let isDeleting = false;\n  let typingTimer;\n  let animationActive = false;\n  let inactivityTimer;\n\n  function shuffle(array) {\n    return array.sort(() => Math.random() - 0.5);\n  }\n\n  function getRandomWords(count = 5) {\n    return shuffle([...allWords]).slice(0, count);\n  }\n\n  function isInViewport(el) {\n    const rect = el.getBoundingClientRect();\n    return rect.top >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight);\n  }\n\n  function type() {\n    if (!animationActive || !isInViewport(searchInput) || inputFocused) return;\n\n    const fullWord = currentSet[currentWord];\n    const currentText = fullWord.substring(0, currentChar);\n    searchInput.placeholder = prefix + currentText;\n\n    if (!isDeleting && currentChar < fullWord.length) {\n      currentChar++;\n      typingTimer = setTimeout(type, 100);\n    } else if (!isDeleting && currentChar === fullWord.length) {\n      isDeleting = true;\n      typingTimer = setTimeout(type, 2000);\n    } else if (isDeleting && currentChar > 0) {\n      currentChar--;\n      typingTimer = setTimeout(type, 50);\n    } else {\n      isDeleting = false;\n      currentWord++;\n      if (currentWord >= currentSet.length) {\n        currentSet = getRandomWords(5);\n        currentWord = 0;\n      }\n      currentChar = 0;\n      typingTimer = setTimeout(type, 500);\n    }\n  }\n\n  function startTyping() {\n    if (!animationActive && !inputFocused) {\n      prefix = getPrefix();\n      currentSet = getRandomWords(5);\n      currentWord = 0;\n      currentChar = 0;\n      animationActive = true;\n      type();\n    }\n  }\n\n  function stopTyping() {\n    animationActive = false;\n    clearTimeout(typingTimer);\n  }\n\n  function resetInactivityTimer() {\n    clearTimeout(inactivityTimer);\n    inactivityTimer = setTimeout(() => {\n      if (!inputFocused) {\n        startTyping();\n      }\n    }, 10000);\n  }\n\n  // --- Fokus- und Input-Logik ---\n  searchInput.addEventListener(\"focus\", function () {\n    inputFocused = true;\n    stopTyping();\n    if (!searchInput.value) {\n      searchInput.placeholder = \"Wonach suchst du?\";\n    }\n    // Keine Animation starten während Fokus!\n  });\n\n  searchInput.addEventListener(\"input\", function () {\n    stopTyping();\n    if (!searchInput.value) {\n      searchInput.placeholder = \"Wonach suchst du?\";\n    }\n    // Keine Animation starten während Fokus!\n  });\n\n  searchInput.addEventListener(\"blur\", function () {\n    inputFocused = false;\n    resetInactivityTimer(); // Erst nach Verlassen ggf. Animation nach 10s\n  });\n\n  window.addEventListener(\"scroll\", function () {\n    if (!isInViewport(searchInput)) {\n      stopTyping();\n    } else if (!animationActive && !inputFocused) {\n      startTyping();\n    }\n  });\n\n  // Beim Start direkt Animation starten\n  startTyping();\n});\n\n// --- Ende Animierte Suchplatzhalter Vorschläge ---\n\n// --- Start Warenkorbvorschau \"Warenkorb\" zu \"Weiter einkaufen\" Funktion ---\n\nfunction patchBasketButton() {\n  var weiterEinkaufenBtn = document.querySelector('.basket-preview-footer .btn-outline-primary.btn-block');\n  var closeBtn = document.querySelector('.basket-preview-header .close');\n  if (weiterEinkaufenBtn && closeBtn) {\n    // Button immer entsperren und Ladeklassen entfernen\n    weiterEinkaufenBtn.removeAttribute('disabled');\n    weiterEinkaufenBtn.disabled = false;\n    weiterEinkaufenBtn.classList.remove('disabled', 'is-loading', 'loading', 'plenty-loader');\n\n    // Nur Spinner-Icons entfernen (nicht das Arrow-Icon!)\n    weiterEinkaufenBtn.querySelectorAll('i.fa-spin, i.fa-circle-o-notch').forEach(function(spinner) {\n      spinner.remove();\n    });\n\n    // Nur einmal patchen, solange der Button lebt\n    if (!weiterEinkaufenBtn.classList.contains('weiter-einkaufen-patched')) {\n      // Button-Text und Arrow setzen (kein Spinner!)\n      weiterEinkaufenBtn.innerHTML = '<i class=\"fa fa-arrow-left\" aria-hidden=\"true\" style=\"margin-right:8px\"></i>Weiter einkaufen';\n\n      weiterEinkaufenBtn.addEventListener('click', function(e) {\n        e.preventDefault();\n\n        // Spinner sofort entfernen\n        weiterEinkaufenBtn.querySelectorAll('i.fa-spin, i.fa-circle-o-notch').forEach(function(spinner) {\n          spinner.remove();\n        });\n        // Button aktiv lassen\n        weiterEinkaufenBtn.removeAttribute('disabled');\n        weiterEinkaufenBtn.disabled = false;\n        weiterEinkaufenBtn.classList.remove('disabled', 'is-loading', 'loading', 'plenty-loader');\n\n        // Overlay schließen\n        closeBtn.click();\n\n        // Nach kurzem Timeout sicherheitshalber Spinner nochmal entfernen\n        setTimeout(function() {\n          weiterEinkaufenBtn.querySelectorAll('i.fa-spin, i.fa-circle-o-notch').forEach(function(spinner) {\n            spinner.remove();\n          });\n          weiterEinkaufenBtn.removeAttribute('disabled');\n          weiterEinkaufenBtn.disabled = false;\n          weiterEinkaufenBtn.classList.remove('disabled', 'is-loading', 'loading', 'plenty-loader');\n        }, 80);\n      });\n\n      weiterEinkaufenBtn.classList.add('weiter-einkaufen-patched');\n    }\n  }\n}\n\nvar observer = new MutationObserver(function(mutationsList, observer) {\n  patchBasketButton();\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  observer.observe(document.body, { childList: true, subtree: true });\n  patchBasketButton();\n});\n\n// --- Ende Warenkorbvorschau \"Warenkorb\" zu \"Weiter einkaufen\" Funktion ---\n\n\n// --- Anfang Doofinder Add-to-Cart ---\n\ndocument.addEventListener('doofinder.cart.add', function(event) {\n    const doofinderVariationId = event.detail.item_id; // Doofinder liefert die Variations-ID als 'item_id'\n    const quantity = event.detail.amount || 1; // Standardmenge ist 1, falls nicht explizit in Doofinder angegeben\n\n    // --- ANGEPASST AN IHREN SHOP (BASIEREND AUF DEM SCREENSHOT) ---\n    // Die exakte URL, die Sie in den Entwicklertools gefunden haben\n    const addUrl = 'https://www.schrauben-hammer.de/rest/io/basket/item'; \n\n    // Die Payload-Daten, die Ihr Shop erwartet.\n    // Es ist ein JSON-Objekt mit 'variationId' und 'quantity'.\n    const requestBody = {\n        variationId: parseInt(doofinderVariationId), // Konvertieren zu einer Ganzzahl\n        quantity: parseInt(quantity) // Konvertieren zu einer Ganzzahl\n    };\n    // --- ENDE DER ANPASSUNG ---\n\n    fetch(addUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json', // Wichtig: Wir senden JSON\n            'X-Requested-With': 'XMLHttpRequest' // Wird oft bei AJAX-Anfragen erwartet\n        },\n        body: JSON.stringify(requestBody) // Konvertiert unser JavaScript-Objekt in einen JSON-String\n    })\n    .then(response => {\n        if (!response.ok) {\n            // Wenn der HTTP-Statuscode ein Fehler ist (z.B. 400, 500)\n            return response.json().then(errorData => {\n                throw new Error(`Fehler beim Hinzufügen zum Warenkorb: ${response.status} - ${errorData.message || response.statusText}`);\n            }).catch(() => {\n                // Falls die Fehlerantwort kein JSON ist\n                throw new Error(`Fehler beim Hinzufügen zum Warenkorb: ${response.status} - ${response.statusText}`);\n            });\n        }\n        return response.json(); // Oder response.text(), je nachdem, was Ihr Shop zurückgibt\n    })\n    .then(data => {\n        // Erfolg: Artikel wurde hinzugefügt\n        console.log('Artikel erfolgreich zum Warenkorb hinzugefügt:', data);\n\n        // Hier können Sie den Nutzer benachrichtigen oder den Mini-Warenkorb aktualisieren.\n        // Plentymarkets Ceres aktualisiert in der Regel den Warenkorb-Counter automatisch,\n        // wenn die API-Antwort korrekt ist. Eine sichtbare Erfolgsmeldung für den Benutzer ist aber gut.\n        \n        // Eine einfache Browser-Benachrichtigung für den Anfang:\n        alert('Artikel erfolgreich zum Warenkorb hinzugefügt!');\n\n        // Optional: Wenn Sie möchten, dass der Warenkorb-Counter sofort aktualisiert wird,\n        // ohne dass die Seite neu geladen wird, können Sie versuchen, ein\n        // 'updated::basket' oder ähnliches Event zu dispatchen, falls Ceres darauf hört.\n        // Beispiel (muss getestet werden, ob Ceres darauf reagiert):\n        // document.dispatchEvent(new CustomEvent('updated::basket', { detail: data }));\n\n    })\n    .catch(error => {\n        // Fehlerbehandlung\n        console.error('Fehler beim Hinzufügen zum Warenkorb:', error);\n        alert('Fehler beim Hinzufügen zum Warenkorb: ' + error.message);\n    });\n});\n\n// --- Ende Doofinder Add-to-Cart --- \n\n})();"}}